name: Build & Push Docker Images

on:
  push:
    branches:
      - main

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect backend/frontend changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'

  build-backend:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: version
        run: echo "VERSION=v$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV

      - name: Build and push backend image
        run: |
          IMAGE=ghcr.io/oleksiudatsko/news-backend
          docker build -t $IMAGE:latest -t $IMAGE:${{ env.VERSION }} ./backend
          docker push $IMAGE:latest

  build-frontend:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: version
        run: echo "VERSION=v$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV

      - name: Build and push frontend image
        run: |
          IMAGE=ghcr.io/oleksiudatsko/news-frontend
          docker build -t $IMAGE:latest -t $IMAGE:${{ env.VERSION }} ./frontend
          docker push $IMAGE:latest
